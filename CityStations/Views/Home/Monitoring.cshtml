@using CityStations.Models
@model IEnumerable<CityStations.Models.MonitoringViewModel>
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Информационные табло прибытия</h4>
    </div>
    <div class="card-body">
        <div id="tableContainer" class="table-responsive tableContainer">
            <table border="0" cellpadding="0" cellspacing="0" width="100%" class="table table-bordered table-hover serch-stations scrollTable">
                <thead class="fixedHeader">
                    <tr>
                        <th width="5%">#</th>
                        <th width="20%">Адрес</th>
                        <th width="20%">Наименование</th>
                        <th width="10%">PING тест</th>
                        <th width="10%">Итог проверки</th>
                        <th width="15%">Причина, совет по устранению</th>
                    </tr>
                </thead>
                <tbody id="tableBodyId" class="scrollContent">
                    @{
                        var i = 1;
                        foreach (var station in Model)
                        {
                            <tr class="variant functionality_@station.Status.ToString()" onclick="selectSearchResult('@station.StationId', '@station.StationNameAndDescription')">
                                <th width="5%">#@i</th>
                                <th width="20%">@station.Address</th>
                                <th width="20%">@station.StationNameAndDescription</th>
                                <th width="10%">@station.PingTest</th>
                                <th width="10%">@station.StatusDescription</th>
                                <th width="15%">@station.LastError</th>
                            </tr>
                            i++;
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th width="100%">На дату @DateTime.Now.ToString("yyyy-MM-dd") общее число активированных информационных табло: - @ViewData["fullCount"]</th>
                        <th width="0%"></th>
                    </tr>
                    <tr>
                        <th width="80%">
                            @using (Html.BeginForm("Monitoring", "Home", new { mode = "normal_work" }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-link"> Функционируют @ViewData["normalWork"] информационных табло </button>
                            }
                        </th>
                        <th width="20%"></th>
                    </tr>
                    <tr>
                        <th width="80%">
                            @using (Html.BeginForm("Monitoring", "Home", new { mode = "bad_work" }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-link"> Проблемы с функционированием замечены у @ViewData["badWork"] информационных табло </button>
                            }
                        </th>
                        <th width="20%"></th>
                    </tr>
                    <tr>
                        <th width="80%">
                            @using (Html.BeginForm("Monitoring", "Home", new { mode = "not_work" }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-link"> Не работает @ViewData["notWork"] информационных табло </button>
                            }
                        </th>
                        <th width="20%"></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    @using (Ajax.BeginForm("SelectStation", "Home", new { }, new AjaxOptions()
    {
        HttpMethod = "POST",
        UpdateTargetId = "wrapper",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "reloadAllContentTriggerGo"
    }))
    {
        @Html.AntiForgeryToken()
        <button id="selectStationButton" type="submit" hidden style="display: none;"></button>
        <input id="selectStationId" name="stationId" type="text" value="" hidden />
    }
</div>
